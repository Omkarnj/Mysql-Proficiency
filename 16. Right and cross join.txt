MySQL RIGHT JOIN Keyword
The RIGHT JOIN keyword returns all records from the right table (table2), and the matching records (if any) from the left table (table1).

MySQL RIGHT JOIN

RIGHT JOIN Syntax
SELECT column_name(s)
FROM table1
RIGHT JOIN table2
ON table1.column_name = table2.column_name;
Demo Database
In this tutorial we will use the well-known Northwind sample database.

Below is a selection from the "Orders" table:

OrderID		CustomerID	EmployeeID	OrderDate	ShipperID
10308			2		7	1996-09-18	3
10309			37		3	1996-09-19	1
10310			77		8	1996-09-20	2

And a selection from the "Employees" table:

EmployeeID	LastName		FirstName	BirthDate	Photo
1		Davolio			Nancy		12/8/1968	EmpID1.pic
2		Fuller			Andrew		2/19/1952	EmpID2.pic
3		Leverling		Janet		8/30/1963	EmpID3.pic


MySQL RIGHT JOIN Example
The following SQL statement will return all employees, and any orders they might have placed:

Example

SELECT Orders.OrderID, Employees.LastName, Employees.FirstName
FROM Orders
RIGHT JOIN Employees ON Orders.EmployeeID = Employees.EmployeeID
ORDER BY Orders.OrderID;

SQL CROSS JOIN Keyword
The CROSS JOIN keyword returns all records from both tables (table1 and table2).


----------------------------------------------------------------------------------------------------

MySQL CROSS JOIN

CROSS JOIN Syntax
SELECT column_name(s)
FROM table1
CROSS JOIN table2;
Note: CROSS JOIN can potentially return very large result-sets!

Demo Database
In this tutorial we will use the well-known Northwind sample database.

Below is a selection from the "Customers" table:

CustomerID	CustomerName				ContactName	Address	City						PostalCode	Country
1		Alfreds Futterkiste			Maria Anders	Obere Str. 57	Berlin	1				2209		Germany
2		Ana Trujillo Emparedados y helados	Ana Trujillo	Avda. de la Constitución 2222	México D.F.		05021		Mexico
3		Antonio Moreno Taquería			Antonio Moreno	Mataderos 2312	México D.F.				05023		Mexico

And a selection from the "Orders" table:

OrderID	CustomerID	EmployeeID	OrderDate	ShipperID
10308		2		7	1996-09-18	3
10309		37		3	1996-09-19	1
10310		77		8	1996-09-20	2

MySQL CROSS JOIN Example
The following SQL statement selects all customers, and all orders:

Example
SELECT Customers.CustomerName, Orders.OrderID
FROM Customers
CROSS JOIN Orders;
Note: The CROSS JOIN keyword returns all matching records from both tables whether the other table matches or not. So, if there are rows in "Customers" that do not have matches in "Orders", or if there are rows in "Orders" that do not have matches in "Customers", those rows will be listed as well.

If you add a WHERE clause (if table1 and table2 has a relationship), the CROSS JOIN will produce the same result as the INNER JOIN clause:

Example
SELECT Customers.CustomerName, Orders.OrderID
FROM Customers
CROSS JOIN Orders
WHERE Customers.CustomerID=Orders.CustomerID;